{"version":3,"sources":["redux/phonebook/phonebook-reducer.js","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","views/PrivateRoute.js","views/PublicRoute.js","App.jsx","index.js","redux/auth/auth-operation.js","components/Loading/Loading.js","redux/phonebook/phonebook-actions.js","components/Container/Container.js","components/Container/Container.module.css","components/Loading/Loading.module.css","redux/phonebook/phonebook-operation.js"],"names":["contacts","createReducer","fetchContacts","fulfilled","_","payload","addContact","state","deleteContact","filter","id","loading","pending","rejected","error","changeFilter","combineReducers","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFetchingCurrentUser","extraReducers","authOperations","register","action","logIn","logOut","fetchCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","getIsLoggedIn","getUserName","getFetchingCurrentUser","Navigation","useSelector","to","className","isActive","AuthNav","UserMenu","dispatch","useDispatch","userName","Avatar","sx","bgcolor","pink","src","type","onClick","AppBar","PrivateRoute","children","PublicRoute","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","Container","Loading","fallback","path","element","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","thunkAPI","getState","persistedToken","rejectWithValue","get","operations","s","color","height","width","createAction","styles","container","module","exports","number","contact","contactId","delete"],"mappings":"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","file":"static/js/main.c6255c0b.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './phonebook-operation';\nimport { changeFilter } from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.pending]: () => null,\n  [fetchContacts.rejected]: (_, { error }) => error,\n  [addContact.pending]: () => null,\n  [addContact.rejected]: (_, { error }) => error,\n  [deleteContact.pending]: () => null,\n  [deleteContact.rejected]: (_, { error }) => error,\n});\n\n//state не нужен, ставим вместо него _\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operation';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport authReducer from './auth/auth-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n/* const phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n}; */\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getUserName = state => state.auth.user.name;\nexport const getFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => 'link ' + (isActive ? 'active' : '')}\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          className={({ isActive }) => 'link ' + (isActive ? 'active' : '')}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\nexport default Navigation;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        className={({ isActive }) => 'link ' + (isActive ? 'active' : '')}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        className={({ isActive }) => 'link ' + (isActive ? 'active' : '')}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Avatar from '@mui/material/Avatar';\nimport { pink } from '@mui/material/colors';\n\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operation';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const userName = useSelector(getUserName);\n\n  return (\n    <div>\n      <span>\n        Добро пожаловать, {userName}\n        <Avatar sx={{ bgcolor: pink[200] }} src=\"/broken-image.jpg\" />\n      </span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport Navigation from '../Navigation/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\n\nimport './AppBar.css';\n\nfunction AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header className=\"bottomShadow\">\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n\nexport default AppBar;\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({ children }) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\n}\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({ children }) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? <Navigate to=\"/contacts\" /> : children;\n}\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { lazy, Suspense } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport authOperations from './redux/auth/auth-operation';\r\nimport { getFetchingCurrentUser } from './redux/auth/auth-selectors';\r\n\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport Container from './components/Container/Container';\r\nimport Loading from './components/Loading/Loading';\r\nimport PrivateRoute from './views/PrivateRoute';\r\nimport PublicRoute from './views/PublicRoute';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('./views/HomePage' /* webpackChunkName: \"HomePage\"*/),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import('./views/RegisterPage' /* webpackChunkName: \"RegisterPage\"*/),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('./views/LoginPage' /* webpackChunkName: \"LoginPage\"*/),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('./views/ContactsPage' /* webpackChunkName: \"ContactsPage\"*/),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(getFetchingCurrentUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {isFetchingCurrentUser ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <AppBar />\r\n          <Suspense fallback={<Loading />}>\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomePage />}></Route>\r\n              <Route\r\n                path=\"/register\"\r\n                element={\r\n                  <PublicRoute>\r\n                    <RegisterPage />\r\n                  </PublicRoute>\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/login\"\r\n                element={\r\n                  <PublicRoute>\r\n                    <LoginPage />\r\n                  </PublicRoute>\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/contacts\"\r\n                element={\r\n                  <PrivateRoute>\r\n                    <ContactsPage />\r\n                  </PrivateRoute>\r\n                }\r\n              ></Route>\r\n              <Route path=\"*\" element={<HomePage />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { persistor, store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = `https://connections-api.herokuapp.com`;\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST, /users/signup\n * body: { name, email, password }\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST, /users/login\n * body: { email, password }\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST, /users/login\n * body: { email, password }\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // Добавить обработку ошибки error.message\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","import Loader from 'react-loader-spinner';\nimport s from './Loading.module.css';\n\nconst Loading = () => (\n  <div className={s.loading}>\n    <Loader type=\"Oval\" color=\"rgb(160, 155, 155)\" height={100} width={100} />\n  </div>\n);\n\nexport default Loading;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phonebook/ChangeFilter');\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3nUrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__lSiVp\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n/*\n * GET, /contacts\n */\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const { data } = await axios.get(`/contacts`);\n    return data;\n  },\n);\n\n/*\n * POST, /contacts\n */\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }) => {\n    const contact = { name, number };\n    const { data } = await axios.post(`/contacts`, contact);\n    return data;\n  },\n);\n\n/*\n * DELETE, /contacts\n */\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async ({ contactId }) => {\n    const { data } = await axios.delete(`/contacts/${contactId}`);\n    return data.id;\n  },\n);\n"],"sourceRoot":""}