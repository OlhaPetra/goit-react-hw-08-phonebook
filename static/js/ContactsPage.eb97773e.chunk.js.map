{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","views/ContactsPage/ContactsPage.module.css","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsPage/ContactsPage.js"],"names":["module","exports","getContacts","state","phonebook","contacts","getLoading","loading","getVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","trim","contact","name","includes","ContactForm","useState","setName","number","setNumber","nameDirty","setNameDirty","nameError","setNameError","numberDirty","setNumberDirty","numberError","setNumberError","validForm","setValidForm","useSelector","dispatch","useDispatch","useEffect","reset","blurHandler","e","target","onSubmit","preventDefault","normilizedContactName","find","cont","alert","addContact","className","s","form","style","color","TextField","variant","label","type","value","onChange","test","String","toLocaleLowerCase","nameHandleChange","onBlur","required","field","numberHandleChange","customInput","Button","disabled","size","ContactItem","contactItem","contactName","contactNumber","ContactList","isLoadingContacts","fetchContacts","list","map","id","item","startIcon","onClick","deleteContact","onDeleteContact","Loading","Filter","input","changeFilter","ContactsPage","Container","container","title"],"mappings":"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","file":"static/js/ContactsPage.eb97773e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1LNED\",\"field\":\"ContactForm_field__1uXaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__c6Z_y\",\"contactName\":\"ContactItem_contactName__1AkGY\",\"contactNumber\":\"ContactItem_contactNumber__3mdQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3_-sp\",\"item\":\"ContactList_item__Tt2zk\",\"text\":\"ContactList_text__2WLI8\",\"button\":\"ContactList_button__3Fzhm\",\"label\":\"ContactList_label__3yo1K\",\"input\":\"ContactList_input__bI35g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3AAIx\",\"input\":\"Filter_input__12d7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsPage_container__1y2YX\",\"title\":\"ContactsPage_title__qBnjd\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.phonebook.contacts;\nexport const getLoading = state => state.phonebook.loading;\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addContact } from '../../redux/phonebook/phonebook-operation';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\n//import Button from '../Button';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport s from './ContactForm.module.css';\nimport NumberFormat from 'react-number-format';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  //validation\n  const [nameDirty, setNameDirty] = useState(false);\n  const [nameError, setNameError] = useState('Enter your name, please');\n  const [numberDirty, setNumberDirty] = useState(false);\n  const [numberError, setNumberError] = useState('Enter your number, please');\n  const [validForm, setValidForm] = useState(false);\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (nameError || numberError) {\n      setValidForm(false);\n    } else {\n      setValidForm(true);\n    }\n  }, [nameError, numberError]);\n\n  const nameHandleChange = e => {\n    setName(e.target.value);\n    const re = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n    if (!re.test(String(e.target.value).toLocaleLowerCase())) {\n      setNameError('Enter correct name');\n    } else {\n      setNameError('');\n    }\n  };\n\n  const numberHandleChange = e => {\n    setNumber(e.target.value);\n      setNumberError('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normilizedContactName = name.toLowerCase().trim();\n    const sameContactName = contacts.find(\n      cont => cont.name.toLowerCase().trim() === normilizedContactName,\n    );\n\n    if (sameContactName) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const blurHandler = e => {\n    // eslint-disable-next-line default-case\n    switch (e.target.name) {\n      case 'name':\n        setNameDirty(true);\n        break;\n      case 'number':\n        setNumberDirty(true);\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      {nameDirty && nameError && (\n        <div style={{ color: 'red' }}>{nameError}</div>\n      )}\n      <TextField\n        variant=\"outlined\"\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => nameHandleChange(e)}\n        onBlur={blurHandler}\n        required\n        className={s.field}\n      />\n      {numberDirty && numberError && (\n        <div style={{ color: 'red' }}>{numberError}</div>\n      )}\n\n      <NumberFormat\n        variant=\"outlined\"\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={e => numberHandleChange(e)}\n        onBlur={blurHandler}\n        required\n        className={s.field}\n        customInput={TextField}\n /*        allowEmptyFormatting\n format=\"+38 (###) ###-##-##\"\n        mask=\"_\" */\n      />\n\n      <Button\n        disabled={!validForm}\n        variant=\"contained\"\n        type=\"submit\"\n        size=\"large\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number }) => {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\n      <p className={s.contactNumber}> {number}</p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default ContactItem;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/phonebook/phonebook-operation';\nimport {\n  getLoading,\n  getVisibleContacts,\n} from '../../redux/phonebook/phonebook-selectors';\nimport ContactItem from '../ContactItem';\nimport Loading from '../Loading';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const isLoadingContacts = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} />\n            <Button\n              variant=\"contained\"\n              startIcon={<DeleteIcon />}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </Button>\n          </li>\n        ))}\n      </ul>\n      {isLoadingContacts && <Loading />}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const filterHandleChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        //value={value}\n        onChange={filterHandleChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operation';\n//import { getLoading } from '../redux/phonebook/phonebook-selectors';\n\nimport Container from '../../components/Container';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\n\nimport s from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  //const isLoadingTodos = useSelector(getLoading);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={s.title}>Contacts</h2>\n        <div className={s.container}>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </Container>\n  );\n}\n"],"sourceRoot":""}