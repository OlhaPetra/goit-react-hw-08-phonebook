{"version":3,"sources":["views/RegisterPage.js"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","reset","onSubmit","e","preventDefault","authOperations","register","autoComplete","id","label","type","value","onChange","target","required","variant","sx","bgcolor","pink"],"mappings":"oQAUe,SAASA,IACtB,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAoBMC,EAAQ,WACZL,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,gCACE,qJACA,uBAAME,SAhBW,SAAAC,GACnBA,EAAEC,iBAEFZ,EAASa,IAAeC,SAAS,CAAEX,OAAME,QAAOE,cAChDE,KAYgCM,aAAa,MAA3C,UACE,cAAC,IAAD,CACEC,GAAG,iBACHC,MAAM,OACNC,KAAK,OACLf,KAAK,OACLgB,MAAOhB,EACPiB,SAlCiB,SAAAT,GACvBP,EAAQO,EAAEU,OAAOF,QAkCXG,UAAQ,IAEV,cAAC,IAAD,CACEN,GAAG,iBACHC,MAAM,SACNM,QAAQ,WACRL,KAAK,QACLf,KAAK,QACLgB,MAAOd,EACPe,SAzCkB,SAAAT,GACxBL,EAASK,EAAEU,OAAOF,QAyCZG,UAAQ,IAEV,cAAC,IAAD,CACEN,GAAG,iBACHC,MAAM,WACNM,QAAQ,WACRL,KAAK,WACLf,KAAK,WACLgB,MAAOZ,EACPa,SA/CqB,SAAAT,GAC3BH,EAAYG,EAAEU,OAAOF,QA+CfG,UAAQ,IAEV,cAAC,IAAD,CAAQE,GAAI,CAAEC,QAASC,IAAK,MAAQH,QAAQ,YAAYL,KAAK,SAA7D","file":"static/js/RegisterPage.2fe10d88.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { pink } from '@mui/material/colors';\n\nimport authOperations from '../redux/auth/auth-operation';\n//import Button from '../components/Button';\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const nameHandleChange = e => {\n    setName(e.target.value);\n  };\n  const emailHandleChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const passwordHandleChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={nameHandleChange}\n          required\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"E-mail\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={emailHandleChange}\n          required\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={passwordHandleChange}\n          required\n        />\n        <Button sx={{ bgcolor: pink[200] }} variant=\"contained\" type=\"submit\">\n          Log in\n        </Button>\n\n        {/* <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={nameHandleChange}\n            required\n          />\n        </label>\n        <label>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={emailHandleChange}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={passwordHandleChange}\n            required\n          />\n        </label>\n        <Button type=\"submit\" title=\"Send\" /> */}\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}